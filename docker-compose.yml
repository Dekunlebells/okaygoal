version: '3.8'

services:
  # Database
  postgres:
    image: postgres:15-alpine
    container_name: okaygoal-postgres
    environment:
      POSTGRES_DB: okaygoal
      POSTGRES_USER: okaygoal_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-okaygoal_password}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/src/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - okaygoal-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U okaygoal_user -d okaygoal"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: okaygoal-redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-okaygoal_redis}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - okaygoal-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Main Application
  app:
    build: .
    container_name: okaygoal-app
    environment:
      NODE_ENV: production
      PORT: 3001
      HOST: 0.0.0.0
      
      # Database
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: okaygoal
      DB_USER: okaygoal_user
      DB_PASSWORD: ${DB_PASSWORD:-okaygoal_password}
      
      # Redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-okaygoal_redis}
      
      # JWT Secrets (CHANGE IN PRODUCTION)
      JWT_SECRET: ${JWT_SECRET:-your-super-secure-jwt-secret-key-change-this-in-production}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET:-your-super-secure-refresh-secret-key-change-this-in-production}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-15m}
      JWT_REFRESH_EXPIRES_IN: ${JWT_REFRESH_EXPIRES_IN:-7d}
      
      # API-Football
      API_FOOTBALL_KEY: ${API_FOOTBALL_KEY}
      API_FOOTBALL_HOST: ${API_FOOTBALL_HOST:-v3.football.api-sports.io}
      
      # Rate Limiting
      RATE_LIMIT_WINDOW_MS: ${RATE_LIMIT_WINDOW_MS:-900000}
      RATE_LIMIT_MAX_REQUESTS_FREE: ${RATE_LIMIT_MAX_REQUESTS_FREE:-1000}
      RATE_LIMIT_MAX_REQUESTS_PREMIUM: ${RATE_LIMIT_MAX_REQUESTS_PREMIUM:-10000}
      
      # CORS
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS:-http://localhost:3000,http://localhost:5173}
      
      # Logging
      LOG_LEVEL: ${LOG_LEVEL:-info}
      
    ports:
      - "3001:3001"
    volumes:
      - app_logs:/app/logs
    networks:
      - okaygoal-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy (Production)
  nginx:
    image: nginx:alpine
    container_name: okaygoal-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - app_logs:/var/log/nginx
    networks:
      - okaygoal-network
    depends_on:
      - app
    restart: unless-stopped
    profiles:
      - production

  # Development frontend (for development only)
  frontend-dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: okaygoal-frontend-dev
    environment:
      VITE_API_URL: http://localhost:3001/api/v1
      VITE_WS_URL: ws://localhost:3001/ws
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - okaygoal-network
    profiles:
      - development

networks:
  okaygoal-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  app_logs:
    driver: local